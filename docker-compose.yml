version: '3.8'

services:
  frontend_pos:
    image: ${FRONT_POS_IMAGE}
    container_name: frontendPos
    restart: always
    networks:
      - app-net

  frontend_admin:
    image: ${FRONT_ADMIN_IMAGE}
    container_name: frontendAdmin
    restart: always
    networks:
      - app-net

  backend:
    image: ${BACKEND_IMAGE}
    container_name: backend
    restart: always
    depends_on:
      - db
      - minio
    env_file:
      - .env
    networks:
      - app-net

  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-net

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - minio-data:/minio
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend_pos
      - frontend_admin
    networks:
      - app-net

volumes:
  db_data:

  minio-data:
    driver: local

networks:
  app-net:
    driver: bridge

